roles ['application_role']
external_url '{{ external_url }}'

unicorn['enable'] = false
puma['enable'] = true
puma['worker_processes'] = 16
puma['max_threads'] = 8
puma['worker_timeout'] = 300
puma['per_worker_max_memory_mb'] = 1024
puma['listen'] = '0.0.0.0'

#unicorn['enable'] = true
#unicorn['worker_processes'] = 40
#unicorn['listen'] = '0.0.0.0'
#unicorn['worker_memory_limit_min'] = "786432000"
#unicorn['worker_memory_limit_max'] = "1073741824"

gitaly['enable'] = false
gitlab_rails['gitaly_token'] = '{{ gitaly_token }}'

gitlab_rails['db_host'] = '{{ pgbouncer_ip }}'
gitlab_rails['db_port'] = 6432
gitlab_rails['db_password'] = '{{ postgres_password }}'
gitlab_rails['db_pool'] = 160
gitlab_rails['initial_root_password'] = '5iveL!fe'
gitlab_rails['auto_migrate'] = {{ 'true' if "gitlab_rails_primary" in group_names else 'false' }}

# Storage Config
# Gitaly
git_data_dirs({
  'default' => { 'gitaly_address' => 'tcp://{{ gitaly_primary_ip }}:8075' },
  'storage1' => { 'gitaly_address' => 'tcp://{{ gitaly_primary_ip }}:8075' },
{% for gitaly_secondary_ip in gitaly_secondary_ips %}
  "storage{{loop.index + 1}}" => { 'gitaly_address' => 'tcp://{{ gitaly_secondary_ip }}:8075' },
{% endfor %}
})

# NFS
gitlab_rails['uploads_directory'] = '{{ gitlab_nfs_path }}/uploads'
gitlab_rails['shared_path'] = '{{ gitlab_nfs_path }}/shared'
gitlab_ci['builds_directory'] = '{{ gitlab_nfs_path }}/builds'

# Ensure UIDs and GIDs match between servers for permissions via NFS
user['uid'] = 9000
user['gid'] = 9000
web_server['uid'] = 9001
web_server['gid'] = 9001
registry['uid'] = 9002
registry['gid'] = 9002

redis['master_name'] = 'gitlab-redis'
redis['master_password'] = '{{ redis_password }}'
gitlab_rails['redis_sentinels'] = [
{% for ip in consul_internal_ips %}
  {'host' => '{{ ip }}', 'port' => 26379},
{% endfor %}
]

postgresql['enable'] = false

nginx['enable'] = true
nginx['status']['options'] = {
  "server_tokens" => "off",
  "access_log" => "off",
  "allow" => "{{ monitor_ip }}",
  "deny" => "all",
}

# Monitoring
consul['enable'] = true
consul['configuration'] = {
  retry_join: %w({{ consul_internal_ips | join(' ') }}),
  bind_addr: '{{ ansible_default_ipv4.address }}'
}
consul['monitoring_service_discovery'] = true

node_exporter['listen_address'] = '0.0.0.0:9100'
gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0']
gitlab_workhorse['prometheus_listen_addr'] = '0.0.0.0:9229'
sidekiq['listen_address'] = '0.0.0.0'
