---
- name: Mount GitLab NFS
  mount:
    fstype: nfs
    opts: defaults,nofail,lookupcache=positive
    state: mounted
    src: "{{ gitlab_nfs_int_ip }}:{{ gitlab_nfs_path }}"
    path: "{{ gitlab_nfs_path }}"
  tags: nfs

- name: Configure SSH Fast Lookup
  blockinfile:
    path: /etc/ssh/sshd_config
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      Match User git   # Apply the AuthorizedKeysCommands to the git user only
        AuthorizedKeysCommand /opt/gitlab/embedded/service/gitlab-shell/bin/gitlab-shell-authorized-keys-check git %u %k
        AuthorizedKeysCommandUser git
      Match all        # End match, settings apply to all users again

- name: Create SSH directory on GitLab NFS if missing
  file:
    path: "{{ gitlab_nfs_path }}/ssh"
    state: directory
  when: "'gitlab_rails_primary' in group_names"
  tags: ssh

- name: Copy SSH keys to NFS if missing
  shell: "cp -n /etc/ssh/ssh_host_*_key* {{ gitlab_nfs_path }}/ssh"
  when: "'gitlab_rails_primary' in group_names"
  tags: ssh

- name: Copy SSH keys from NFS
  shell: "cp {{ gitlab_nfs_path }}/ssh/ssh_host_*_key* /etc/ssh"
  when: "'gitlab_rails_secondary' in group_names"
  tags: ssh

- name: Reload SSH service
  service:
    name: ssh
    state: reloaded
  tags: ssh

- name: Copy secrets file from NFS
  shell: "cp {{ gitlab_nfs_path }}/gitlab-secrets.json /etc/gitlab/gitlab-secrets.json 2>/dev/null || true"
  tags: secrets

- name: Copy GCP service account file
  copy:
    src: "{{ gcp_service_account_host_file }}"
    dest: "{{ gcp_service_account_target_file }}"
    mode: 0755
  tags: secrets
  when:
    - cloud_provider == 'gcp'

- name: Configure primary GitLab Rails node
  block:
    - name: Gather facts for external omnibus postgres
      block:
        - name: Get latest Postgres primary
          command: gitlab-ctl get-postgresql-primary
          register: postgres_leader_int_address
          delegate_to: "{{ groups['postgres'][0] }}"
          delegate_facts: true
          become: true

        - name: Update Postgres primary IP and Port
          set_fact:
            postgres_primary_int_ip: "{{ postgres_leader_int_address.stdout.split(':')[0] }}"
            postgres_primary_int_port: "{{ postgres_leader_int_address.stdout.split(':')[1] }}"
      when: ('postgres' in groups and postgres_replication_manager == 'patroni')
      tags:
        - reconfigure
        - db_migrate

    - name: Setup primary GitLab Rails config file
      template:
        src: templates/gitlab-rails.gitlab.rb.j2
        dest: /etc/gitlab/gitlab.rb
      vars:
        db_migrate: "{{ (true if 'postgres' in groups else false) | lower }}"
      tags:
        - reconfigure
        - db_migrate
        - ssl

    - name: Reconfigure primary GitLab Rails node
      command: gitlab-ctl reconfigure
      register: result
      retries: 3
      until: result is success
      tags:
        - reconfigure
        - db_migrate
        - ssl

    - name: Copy SSL Certificates from primary GitLab Rails to NFS if missing
      copy:
        src: "/etc/gitlab/ssl/"
        dest: "{{ gitlab_nfs_path }}/ssl"
        mode: preserve
        remote_src: true
      tags:
        - reconfigure
        - ssl_copy
  when: "'gitlab_rails_primary' in group_names"

- name: Copy any SSL Certificates from NFS
  copy:
    src: "{{ gitlab_nfs_path }}/ssl/"
    dest: "/etc/gitlab/ssl"
    mode: preserve
    remote_src: true
  tags:
    - reconfigure
    - ssl_copy

- name: Setup all GitLab Rails config files
  template:
    src: templates/gitlab-rails.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  register: result
  retries: 3
  until: result is success
  tags: reconfigure

- name: Reconfigure all GitLab Rails
  command: gitlab-ctl reconfigure
  tags: reconfigure

- name: Restart GitLab
  command: gitlab-ctl stop && gitlab-ctl start
  register: result
  retries: 2
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Copy secrets file to NFS if missing
  command: "cp -n /etc/gitlab/gitlab-secrets.json {{ gitlab_nfs_path }}"
  tags: secrets
  run_once: true

- name: Create skip-auto-reconfigure file
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    mode: u=rw,g=r,o=r
