---
- name: Mount GitLab NFS
  mount:
    fstype: nfs
    opts: defaults,nofail,lookupcache=positive
    state: mounted
    src: "{{ gitlab_nfs_int_ip }}:{{ gitlab_nfs_path }}"
    path: "{{ gitlab_nfs_path }}"
  tags: nfs

- name: Configure SSH Fast Lookup
  blockinfile:
    path: /etc/ssh/sshd_config
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      Match User git   # Apply the AuthorizedKeysCommands to the git user only
        AuthorizedKeysCommand /opt/gitlab/embedded/service/gitlab-shell/bin/gitlab-shell-authorized-keys-check git %u %k
        AuthorizedKeysCommandUser git
      Match all        # End match, settings apply to all users again

- name: Reload SSH service
  service:
    name: ssh
    state: reloaded

- name: Copy secrets file from NFS
  shell: "cp {{ gitlab_nfs_path }}/gitlab-secrets.json /etc/gitlab/gitlab-secrets.json 2>/dev/null || true"
  tags: secrets

- name: Copy GCP service account file
  copy:
    src: "{{ service_account_file }}"
    dest: "{{ serviceaccount_path }}"
    mode: 0755
  tags: secrets
  when:
    - cloud_provider == 'gcp'

- name: External database related tasks
  block:
  - name: Patroni required tasks
    block:
    - name: Setup GitLab Rails Primary config file without DB Migrations when using Patroni
      template:
        src: templates/gitlab-rails.gitlab.rb.j2
        dest: /etc/gitlab/gitlab.rb
      register: result
      retries: 3
      until: result is success
      tags: reconfigure

    - name: Reconfigure GitLab Primary to enable get-postgresql-primary when using Patroni
      shell: gitlab-ctl reconfigure
      tags:
        - reconfigure

    - name: Get Postgres Leader when using Patroni
      shell: gitlab-ctl get-postgresql-primary
      register: postgres_leader_int_address
      tags:
        - reconfigure
        - db_migrate

    - name: Update Postgres Primary IP and Port when using Patroni
      set_fact:
        postgres_primary_int_ip: "{{ postgres_leader_int_address.stdout.split(':')[0] }}"
        postgres_primary_int_port: "{{ postgres_leader_int_address.stdout.split(':')[1] }}"
      tags:
        - reconfigure
        - db_migrate
    when:
      - postgres_replication_manager == 'patroni'
      - "'gitlab_rails_primary' in group_names"

  - name: Setup GitLab Primary config file with DB Migrations
    template:
      src: templates/gitlab-rails.gitlab.rb.j2
      dest: /etc/gitlab/gitlab.rb
    vars:
      db_migrate: true
    register: result
    retries: 3
    until: result is success
    tags:
      - reconfigure
      - db_migrate
    when: "'gitlab_rails_primary' in group_names"

  - name: Reconfigure GitLab Primary
    shell: gitlab-ctl reconfigure
    tags:
      - reconfigure
      - db_migrate
    when: "'gitlab_rails_primary' in group_names"
  when: "'postgres' in groups"

- name: Setup all GitLab Rails config files
  template:
    src: templates/gitlab-rails.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  register: result
  retries: 3
  until: result is success
  tags: reconfigure

- name: Reconfigure all GitLab Rails
  shell: gitlab-ctl reconfigure
  tags: reconfigure

- name: Restart GitLab
  command: gitlab-ctl stop && gitlab-ctl start
  register: result
  retries: 2
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Copy secrets file to NFS if missing
  shell: "cp -n /etc/gitlab/gitlab-secrets.json {{ gitlab_nfs_path }}"
  tags: secrets
  run_once: true

- name: Create skip-auto-reconfigure file
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    mode: u=rw,g=r,o=r
