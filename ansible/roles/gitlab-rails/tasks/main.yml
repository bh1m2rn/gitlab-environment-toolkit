---
# - name: Mount GitLab NFS
#   mount:
#     fstype: nfs
#     opts: defaults,nofail,lookupcache=positive
#     state: mounted
#     src: "{{ gitlab_nfs_int_ip }}:{{ gitlab_nfs_path }}"
#     path: "{{ gitlab_nfs_path }}"
#   tags: nfs

- name: Configure SSH Fast Lookup
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^{{ item.setting }}="
    line: "{{ item.setting }} {{ item.value }}"
  with_items:
    - { setting: 'AuthorizedKeysCommand', value: '/opt/gitlab/embedded/service/gitlab-shell/bin/gitlab-shell-authorized-keys-check git %u %k'}
    - { setting: 'AuthorizedKeysCommandUser', value: 'git'}
  tags: authkeys

- name: Download secrets files
  shell: |
    gsutil cp gs://{{ gitlab_secrets_storage }}/gitlab-secrets.json /etc/gitlab/gitlab-secrets.json 2>/dev/null || true
    gsutil cp gs://{{ gitlab_secrets_storage }}/{{ serviceaccount_filename }} {{ serviceaccount_path }} 2>/dev/null || true
  tags: secrets

- name: Get Postgres Leader when using Patroni
  shell: gitlab-ctl get-postgresql-primary
  register: postgres_leader_int_address
  tags: 
    - reconfigure
    - db_migrate
  when: 
    - install_patroni is defined and install_patroni
    - "'gitlab_rails_primary' in group_names"

- name: Update Postgres Primary IP and Port when using Patroni
  set_fact:
    postgres_primary_int_ip: "{{ postgres_leader_int_address.stdout.split(':')[0] }}"
    postgres_primary_int_port: "{{ postgres_leader_int_address.stdout.split(':')[1] }}"
  tags:
    - reconfigure
    - db_migrate
  when: 
    - install_patroni is defined and install_patroni
    - "'gitlab_rails_primary' in group_names"

- name: Setup GitLab Primary config file with DB Migrations
  template:
    src: templates/gitlab-rails.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  vars:
    db_migrate: True
  register: result
  retries: 3
  until: result is success
  tags: 
    - reconfigure
    - db_migrate
  when: "'gitlab_rails_main' in group_names"

- name: Reconfigure GitLab Primary
  shell: gitlab-ctl reconfigure
  tags:
    - reconfigure
    - db_migrate
  when: "'gitlab_rails_main' in group_names"

- name: Setup all GitLab Rails config files without DB Migrations
  template:
    src: templates/gitlab-rails.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  register: result
  retries: 3
  until: result is success
  tags: reconfigure
  when: "'gitlab_rails_other' in group_names"

- name: Reconfigure any other GitLab instances
  shell: gitlab-ctl reconfigure
  tags: reconfigure
  when: "'gitlab_rails_other' in group_names"

- name: Restart GitLab
  command: gitlab-ctl stop && gitlab-ctl start
  register: result
  retries: 2
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Upload secrets file if missing
  shell: "gsutil cp -n /etc/gitlab/gitlab-secrets.json gs://{{ gitlab_secrets_storage }}"
  tags: secrets
  run_once: true

- name: Create skip-auto-reconfigure file
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    mode: u=rw,g=r,o=r
