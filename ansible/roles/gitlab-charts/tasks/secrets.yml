---
- name: Lookup GitLab Secrets file from NFS
  slurp:
    path: "{{ gitlab_nfs_path }}/gitlab-secrets.json"
  delegate_to: "{{ groups['gitlab_nfs'][0] }}"
  delegate_facts: true
  become: true
  register: gitlab_secrets_json
  tags:
    - secrets
    - rails-secrets

- name: Convert GitLab Rails secrets from file
  set_fact:
    gitlab_rails_secrets:
      production: "{{ (gitlab_secrets_json.content | b64decode | from_yaml).gitlab_rails }}"
    gitlab_shell_token: "{{ (gitlab_secrets_json.content | b64decode | from_yaml).gitlab_shell.secret_token }}"
  tags:
    - secrets
    - rails-secrets

- name: Configure GitLab Rails secrets
  k8s:
    state: present
    definition:
      kind: Secret
      type: Opaque
      metadata:
        name: "gitlab-rails-secrets"
        namespace: "{{ gitlab_charts_release_namespace }}"
      stringData:
        secrets.yml: |
          {{ gitlab_rails_secrets | to_yaml }}
  tags:
    - secrets
    - rails-secrets

- name: Configure GitLab Shell Token Secret
  k8s:
    state: present
    definition:
      kind: Secret
      type: Opaque
      metadata:
        name: "gitlab-shell-token"
        namespace: "{{ gitlab_charts_release_namespace }}"
      stringData:
        password: "{{ gitlab_shell_token }}"
  tags:
    - secrets
    - rails-secrets

- name: Configure GitLab Chart password secrets
  k8s:
    state: present
    definition:
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ gitlab_charts_release_namespace }}"
      stringData:
        password: "{{ item.secret }}"
  no_log: true
  loop:
    - { name: "gitlab-initial-root-password", secret: "{{ gitlab_root_password }}" }
    - { name: "gitlab-postgres-password", secret: "{{ postgres_password }}" }
    - { name: "gitlab-redis-password", secret: "{{ redis_password }}" }
    - { name: "gitlab-praefect-external-token", secret: "{{ praefect_external_token }}" }
    - { name: "gitlab-gitaly-external-token", secret: "{{ gitaly_token }}" }
    - { name: "gitlab-grafana-initial-password", secret: "{{ grafana_password }}" }
  tags: secrets

- name: Configure Object Storage connection key
  k8s:
    state: present
    definition:
      kind: Secret
      type: Opaque
      metadata:
        name: "gitlab-object-storage-key"
        namespace: "{{ gitlab_charts_release_namespace }}"
      stringData:
        key: "{{ lookup('template', 'templates/object_storage_key.' + cloud_provider + '.yml.j2') }}"
  tags: secrets

- name: Configure Backups Object Storage connection key
  k8s:
    state: present
    definition:
      kind: Secret
      type: Opaque
      metadata:
        name: "gitlab-backups-object-storage-key"
        namespace: "{{ gitlab_charts_release_namespace }}"
      stringData:
        key: |
          {{ lookup('vars', cloud_provider + '_backups_object_storage_key') }}
  tags:
    - secrets
    - backup-secrets

- name: Configure External SSL user secrets if enabled
  block:
    - name: Check if External SSL certificate is provided
      stat:
        path: "{{ external_ssl_files_host_certificate_file }}"
      register: ssl_pem

    - name: Fail if External SSL certificate is missing
      fail:
        msg: "External SSL certificate file '{{ external_ssl_files_host_certificate_file | basename }}' could not be found in path '{{ external_ssl_files_host_certificate_file | realpath }}'. Check that the file is present as configured and run again. Exiting..."
      when: not ssl_pem.stat.exists

    - name: Check if External SSL key is provided
      stat:
        path: "{{ external_ssl_files_host_key_file }}"
      register: ssl_key

    - name: Fail if External SSL key is missing
      fail:
        msg: "External SSL key file '{{ external_ssl_files_host_key_file | basename }}' could not be found in path '{{ external_ssl_files_host_key_file | realpath }}'. Check that the file is present as configured and run again. Exiting..."
      when: not ssl_key.stat.exists

    - name: Configure External SSL User provided certificates
      k8s:
        state: present
        definition:
          kind: Secret
          type: kubernetes.io/tls
          metadata:
            name: "gitlab-webservice-ssl"
            namespace: "{{ gitlab_charts_release_namespace }}"
          stringData:
            tls.crt: |
              {{ lookup('file', external_ssl_files_host_certificate_file) }}
            tls.key: |
              {{ lookup('file', external_ssl_files_host_key_file) }}
  tags:
    - secrets
    - ssl-secrets
  when:
    - external_url_ssl
    - external_ssl_source == 'user'

- name: Remove any External SSL secrets if disabled
  k8s:
    state: absent
    definition:
      kind: Secret
      type: kubernetes.io/tls
      metadata:
        name: "gitlab-webservice-ssl"
        namespace: "{{ gitlab_charts_release_namespace }}"
  when:
    - not external_url_ssl
    - "external_ssl_source == ''"

- name: Create Container Registry object storage secret
  k8s:
    state: present
    definition:
      kind: Secret
      type: Opaque
      metadata:
        name: "gitlab-container-registry-object-storage-key"
        namespace: "{{ gitlab_charts_release_namespace }}"
      stringData:
        config: "{{ lookup('template', 'templates/container_registry_object_storage.' + cloud_provider + '.yml.j2') }}"
  when:
    - cloud_provider == 'aws'
    - external_url_ssl and external_ssl_source != ''
  tags: secrets
