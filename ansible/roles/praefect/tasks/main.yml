---
  - name: Setup GitLab config file
    template:
      src: templates/praefect.gitlab.rb.j2
      dest: /etc/gitlab/gitlab.rb
    tags: reconfigure
  
  - name: Download secrets file
    shell: "gsutil cp gs://{{ gitlab_secrets_storage }}/gitlab-secrets.json /etc/gitlab/gitlab-secrets.json 2>/dev/null || true"
    tags: secrets

  - name: Check if Database is already set up for Praefect
    shell: /opt/gitlab/embedded/bin/psql -U postgres -d template1 -h {{ praefect_postgres_main_int_ip }} -c "SELECT 1 FROM pg_roles WHERE rolname='praefect';"
    environment:
      PGPASSWORD: "{{ praefect_postgres_password }}"
    register: praefect_database_check_result
    when: "'praefect_main' in group_names"
    tags: database

  - name: Setup Database on Postgres
    shell: |
      /opt/gitlab/embedded/bin/psql -U postgres -d template1 -h {{ praefect_postgres_main_int_ip }} -c "CREATE ROLE praefect WITH LOGIN CREATEDB PASSWORD '{{ praefect_postgres_password }}';"
      /opt/gitlab/embedded/bin/psql -U praefect -d template1 -h {{ praefect_postgres_main_int_ip }} -c "CREATE DATABASE praefect_production WITH ENCODING=UTF8;"
    environment:
      PGPASSWORD: "{{ praefect_postgres_password }}"
    when: 
      - "'praefect_main' in group_names"
      - "'(0 rows)' in praefect_database_check_result.stdout"
    tags: database

  - name: Reconfigure Praefect
    shell: gitlab-ctl reconfigure
    register: result
    retries: 2
    until: result is success
    tags: reconfigure

  - name: Restart Praefect
    command: gitlab-ctl restart
    register: result
    retries: 2
    until: result is success
    tags:
      - reconfigure
      - restart

  - name: Upload secrets file if missing
    shell: "gsutil cp -n /etc/gitlab/gitlab-secrets.json gs://{{ gitlab_secrets_storage }}"
    tags: secrets
    run_once: true
  
  - name: Create skip-auto-reconfigure file
    file:
      path: /etc/gitlab/skip-auto-reconfigure
      state: touch
      mode: u=rw,g=r,o=r
