---
- name: Mount GitLab NFS
  mount:
    fstype: nfs
    opts: defaults,nofail,lookupcache=positive
    state: mounted
    src: "{{ gitlab_nfs_int_ip }}:{{ gitlab_nfs_path }}"
    path: "{{ gitlab_nfs_path }}"
  tags: nfs

- name: Copy secrets file from NFS
  shell: "cp {{ gitlab_nfs_path }}/gitlab-secrets.json /etc/gitlab/gitlab-secrets.json 2>/dev/null || true"
  tags: secrets

- name: Check if custom config exists
  stat:
    path: "{{ praefect_custom_config_file }}"
  delegate_to: localhost
  become: false
  tags:
    - reconfigure
    - db_migrate
  register: praefect_custom_config_file_path

- name: Get current Omnibus Postgres Primary
  block:
    - name: Get latest Postgres primary
      command: gitlab-ctl get-postgresql-primary
      register: postgres_leader_int_address
      delegate_to: "{{ groups['postgres'][0] }}"
      delegate_facts: true
      become: true

    - name: Update Postgres primary IP and port
      set_fact:
        postgres_host: "{{ postgres_leader_int_address.stdout.split(':')[0] }}"
        postgres_port: "{{ postgres_leader_int_address.stdout.split(':')[1] }}"
  when:
    - "'praefect_postgres' not in groups"
    - "'postgres' in groups and groups['postgres'] | length > 1"
    - postgres_replication_manager == 'patroni'
  tags:
    - reconfigure
    - db_migrate
  run_once: true

- name: Get current Omnibus Praefect Postgres Primary
  block:
    - name: Get latest Praefect Postgres primary
      command: gitlab-ctl get-postgresql-primary
      register: praefect_postgres_leader_int_address
      delegate_to: "{{ groups['praefect_postgres'][0] }}"
      delegate_facts: true
      become: true

    - name: Update Praefect Postgres primary IP and port
      set_fact:
        praefect_postgres_host: "{{ praefect_postgres_leader_int_address.stdout.split(':')[0] }}"
        praefect_postgres_port: "{{ praefect_postgres_leader_int_address.stdout.split(':')[1] }}"
  when: "'praefect_postgres' in groups and groups['praefect_postgres'] | length > 1"
  tags:
    - reconfigure
    - db_migrate
    - test
  run_once: true

- name: Create Praefect User and Database
  block:
    - name: Create Praefect Database User
      community.postgresql.postgresql_user:
        login_host: "{{ praefect_postgres_host }}"
        login_port: "{{ praefect_postgres_port }}"
        login_user: "{{ praefect_postgres_admin_username }}"
        login_password: "{{ praefect_postgres_admin_password }}"
        db: "template1"
        name: "{{ praefect_postgres_username.split('@')[0] }}"
        password: "{{ praefect_postgres_password }}"

    - name: Create Praefect Database
      community.postgresql.postgresql_db:
        login_host: "{{ praefect_postgres_host }}"
        login_port: "{{ praefect_postgres_port }}"
        login_user: "{{ praefect_postgres_admin_username }}"
        login_password: "{{ praefect_postgres_admin_password }}"
        name: "{{ praefect_postgres_database_name }}"
        owner: "{{ praefect_postgres_username.split('@')[0] }}"
        encoding: UTF-8

    - name: Enable required Postgres extensions
      community.postgresql.postgresql_ext:
        login_host: "{{ praefect_postgres_host }}"
        login_port: "{{ praefect_postgres_port }}"
        login_user: "{{ praefect_postgres_admin_username }}"
        login_password: "{{ praefect_postgres_admin_password }}"
        name: "{{ item }}"
        db: "{{ praefect_postgres_database_name }}"
      loop: ['pg_trgm', 'btree_gist', 'plpgsql']

    - name: Add PgBouncer login function
      community.postgresql.postgresql_query:
        login_host: "{{ praefect_postgres_host }}"
        login_port: "{{ praefect_postgres_port }}"
        login_user: "{{ praefect_postgres_admin_username }}"
        login_password: "{{ praefect_postgres_admin_password }}"
        db: "{{ praefect_postgres_database_name }}"
        query: "{{ lookup('file', 'pg_shadow_lookup.sql') }}"
  when: (geo_secondary_site_group_name not in groups)
  tags:
    - reconfigure
    - db_migrate
  run_once: true

- name: Perform database migrations
  block:
    - name: Setup Praefect deploy node config file with DB Migrations
      template:
        src: templates/praefect.gitlab.rb.j2
        dest: /etc/gitlab/gitlab.rb
      vars:
        db_migrate: true

    - name: Copy custom GitLab config file
      copy:
        src: "{{ praefect_custom_config_file }}"
        dest: "/etc/gitlab/gitlab.praefect.custom.rb"
        mode: 0644
      tags:
        - reconfigure
        - db_migrate
      when: praefect_custom_config_file_path.stat.exists

    - name: Reconfigure Praefect deploy node
      shell: gitlab-ctl reconfigure
      register: result
      retries: 3
      until: result is success
  tags:
    - reconfigure
    - db_migrate
  run_once: true

- name: Setup GitLab config file
  template:
    src: templates/praefect.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  register: result
  retries: 3
  until: result is success
  tags: reconfigure

- name: Copy custom GitLab config file
  copy:
    src: "{{ praefect_custom_config_file }}"
    dest: "/etc/gitlab/gitlab.praefect.custom.rb"
    mode: 0644
  tags: reconfigure
  when: praefect_custom_config_file_path.stat.exists

- name: Reconfigure all Praefects
  shell: gitlab-ctl reconfigure
  register: result
  retries: 2
  until: result is success
  tags: reconfigure

- name: Restart all Praefects
  command: gitlab-ctl restart
  register: result
  retries: 2
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Copy secrets file to NFS if missing
  shell: "cp -n /etc/gitlab/gitlab-secrets.json {{ gitlab_nfs_path }}"
  tags: secrets
  run_once: true

- name: Create skip-auto-reconfigure file
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    mode: u=rw,g=r,o=r
