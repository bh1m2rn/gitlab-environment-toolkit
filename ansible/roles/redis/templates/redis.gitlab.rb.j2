{% if groups[redis_group_name] | count > 1 %}
roles ['redis_sentinel_role', '{{ "redis_master_role" if (group_names | select("match", ".*_primary") | list | count == 1) else "redis_replica_role" }}']

sentinel['bind'] = '0.0.0.0'
sentinel['quorum'] = 2
{% else %}
roles ["redis_master_role"]
{% endif %}

redis['bind'] = '0.0.0.0'
redis['port'] = {{ redis_port }}
redis['password'] = '{{ redis_password }}'
redis['master_password'] = '{{ redis_password }}'

{% if redis_group_name == 'redis_cache' %}
redis['master_name'] = 'gitlab-redis-cache'
redis['master_ip'] = '{{ redis_cache_primary_int_ip }}'

redis['maxmemory'] = '{{ ((ansible_memory_mb.real.total | int) * 0.9) | round | int }}mb'
redis['maxmemory_policy'] = "allkeys-lru"
redis['maxmemory_samples'] = 5
{% elif redis_group_name == 'redis_persistent' %}
redis['master_name'] = 'gitlab-redis-persistent'
redis['master_ip'] = '{{ redis_persistent_primary_int_ip }}'
{% else %}
redis['master_name'] = 'gitlab-redis'
redis['master_ip'] = '{{ redis_primary_int_ip }}'
{% endif %}

gitlab_rails['auto_migrate'] = false

consul['enable'] = true
consul['configuration'] = {
  bind_addr: '{{ ansible_default_ipv4.address }}',
  retry_join: %w({{ (consul_int_ips if 'consul' in groups else gitlab_rails_int_ips) | join(' ') }})
}
consul['monitoring_service_discovery'] = true

node_exporter['listen_address'] = '0.0.0.0:9100'
redis_exporter['listen_address'] = '0.0.0.0:9121'
redis_exporter['flags'] = {
  'redis.addr' => "redis://localhost:{{ redis_port }}",
  'redis.password' => '{{ redis_password }}'
}

custom_confs = Dir.glob(File.join("/etc/gitlab/", "gitlab.redis.*.rb"))
custom_confs.each { |conf|
  from_file conf
}
