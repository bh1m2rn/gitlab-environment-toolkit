roles ['{{ "redis_master_role" if (group_names | select("match", ".*_main") | list | count > 0) else "redis_slave_role" }}']

redis['bind'] = '0.0.0.0'
redis['port'] = {{ redis_port }}
redis['password'] = '{{ redis_password }}'

{% if (group_names | select("match", ".*_cache_.*") | list | count > 0) %}
redis['master_ip'] = '{{ redis_cache_main_int_ip }}'

redis['maxmemory'] = '{{ ((ansible_memory_mb.real.total | int) * 0.9) | round | int }}mb'
redis['maxmemory_policy'] = "allkeys-lru"
redis['maxmemory_samples'] = 5
{% elif (group_names | select("match", ".*_persistent_.*") | list | count > 0) %}
redis['master_ip'] = '{{ redis_persistent_main_int_ip }}'
{% else %}
redis['master_ip'] = '{{ redis_main_int_ip }}'
{% endif %}

gitlab_rails['auto_migrate'] = false

consul['enable'] = true
consul['configuration'] = {
  retry_join: %w({{ consul_int_ips | join(' ') }}),
  datacenter: '{{ consul_datacenter }}',
  bind_addr: '{{ ansible_default_ipv4.address }}'
}
consul['monitoring_service_discovery'] =  true

node_exporter['listen_address'] = '0.0.0.0:9100'
redis_exporter['listen_address'] = '0.0.0.0:9121'
redis_exporter['flags'] = {
  'redis.addr' => "redis://localhost:{{ redis_port }}",
  'redis.password' => '{{ redis_password }}'
}
