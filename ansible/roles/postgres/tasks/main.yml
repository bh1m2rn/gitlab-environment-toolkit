---
- name: Setup GitLab config file
  template:
    src: templates/postgres.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  tags: reconfigure

- name: Download secrets file
  shell: "gsutil cp gs://{{ gitlab_secrets_storage }}/gitlab-secrets.json /etc/gitlab/gitlab-secrets.json 2>/dev/null || true"
  tags: secrets

- name: Reconfigure PostgreSQL
  shell: gitlab-ctl reconfigure
  tags: reconfigure

- name: Restart PostgreSQL
  command: gitlab-ctl restart
  register: result
  retries: 2
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Upload secrets file if missing
  shell: "gsutil cp -n /etc/gitlab/gitlab-secrets.json gs://{{ gitlab_secrets_storage }}"
  tags: secrets
  run_once: true

- name: Run vacuumdb
  shell: /opt/gitlab/embedded/bin/vacuumdb --all --analyze-in-stages -h /var/opt/gitlab/postgresql
  become: true
  become_user: gitlab-psql
  when: "'postgres_primary' in group_names"
  tags:
    - reconfigure
    - restart
    - vacuumdb

- name: Show debug output of postgres cluster status
  block:
    - name: Debug capture output of 'gitlab-ctl repmgr cluster show'
      shell: "gitlab-ctl repmgr cluster show 2>/dev/null"
      register: cluster_show
      ignore_errors: yes
      when: install_patroni is not defined or not install_patroni
      tags: debug

    - name: Debug show output of 'gitlab-ctl repmgr cluster show'
      debug: 
        msg: "{{ cluster_show.stdout }}"
      when: 
        - cluster_show.stdout is defined
      tags: debug

    - name: Debug capture output of 'gitlab-ctl patroni members'
      shell: "gitlab-ctl patroni members 2>/dev/null"
      register: patroni_members
      ignore_errors: yes
      when: install_patroni is defined and install_patroni
      tags: debug
      
    - name: Debug show output of 'gitlab-ctl patroni members'
      debug: 
        msg: "{{ patroni_members.stdout }}"
      when: 
        - patroni_members.stdout is defined
      tags: debug

- name: Check other Postgres standby status
  shell: (gitlab-ctl repmgr cluster show 2>/dev/null | grep -E 'standby \| {{ ansible_hostname }}') || echo ""
  register: postgres_other_standby_status
  tags: postgres_other_standby
  when: 
    - "'postgres_other' in group_names"
    - install_patroni is not defined or not install_patroni

- name: Enable other Postgres standby
  shell: "gitlab-ctl repmgr standby setup {{ postgres_main_int_ip }} -w"
  register: postgres_other_standby_result
  tags: postgres_other_standby
  when: 
    - "'postgres_other' in group_names"
    - install_patroni is not defined or not install_patroni
    - postgres_other_standby_status.stdout == ''
  failed_when:
    - postgres_other_standby_result.rc != 0
    - '"exists already" not in postgres_secondary_standby_result.stderr'

- name: Create skip-auto-reconfigure file
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    mode: u=rw,g=r,o=r