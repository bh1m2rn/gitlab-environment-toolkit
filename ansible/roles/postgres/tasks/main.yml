---
- name: Create /etc/gitlab/gitlab.rb
  template:
    src: templates/postgres.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  tags: reconfigure

- name: Download secrets file
  shell: "gsutil cp gs://{{ gitlab_secrets_storage }}/gitlab-secrets.json /etc/gitlab/gitlab-secrets.json 2>/dev/null || true"
  tags: secrets

- name: Reconfigure PostgreSQL
  shell: gitlab-ctl reconfigure
  tags: reconfigure

- name: Restart PostgreSQL
  command: gitlab-ctl restart
  register: result
  retries: 2
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Upload secrets file if missing
  shell: "gsutil cp -n /etc/gitlab/gitlab-secrets.json gs://{{ gitlab_secrets_storage }}"
  tags: secrets
  run_once: true

- name: Debug capture output of 'gitlab-ctl repmgr cluster show'
  shell: "gitlab-ctl repmgr cluster show 2>/dev/null"
  register: cluster_show
  ignore_errors: yes
  tags:
    - debug

- name: Debug show output of 'gitlab-ctl repmgr cluster show'
  debug: 
    msg: "{{ cluster_show.stdout }}"
  when: cluster_show.stdout is defined
  tags:
    - debug

- name: Check secondary standby status
  shell: (gitlab-ctl repmgr cluster show 2>/dev/null | grep -E 'standby \| {{ ansible_hostname }}') || echo ""
  register: postgres_secondary_standby_status
  tags: postgres_secondary_standby
  when: 
    - "'postgres_secondary' in group_names"

- name: Enable secondary standby
  shell: "gitlab-ctl repmgr standby setup {{ postgres_primary_ip }} -w"
  register: postgres_secondary_standby_result
  tags: postgres_secondary_standby
  when: 
    - "'postgres_secondary' in group_names"
    - postgres_secondary_standby_status.stdout == ''
  failed_when:
    - postgres_secondary_standby_result.rc != 0
    - '"exists already" not in postgres_secondary_standby_result.stderr'

- name: Create skip-auto-reconfigure file
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    mode: u=rw,g=r,o=r