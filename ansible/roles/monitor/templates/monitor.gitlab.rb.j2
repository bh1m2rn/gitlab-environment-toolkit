external_url '{{ external_url_sanitised }}'

# Enable Prometheus
prometheus['enable'] = true
prometheus['listen_address'] = '0.0.0.0:9090'
prometheus['monitor_kubernetes'] = false

prometheus['scrape_configs'] = [
  {
    'job_name': 'non_omnibus_node',
    'static_configs' => [
      'targets' => [
{% if 'haproxy_external' in groups %}
        "{{ haproxy_external_int_ip }}:9100",
{% endif %}
{% if 'haproxy_internal' in groups %}
        "{{ haproxy_internal_int_ip }}:9100",
{% endif %}
{% for ip in elastic_int_ips %}
        "{{ ip }}:9100",
{% endfor %}
        "{{ gitlab_nfs_int_ip }}:9100"
      ],
    ],
  },
  {
    'job_name': 'haproxy',
    'static_configs' => [
      'targets' => [
{% if 'haproxy_external' in groups %}
        "{{ haproxy_external_int_ip }}:1936",
{% endif %}
{% if 'haproxy_internal' in groups %}
        "{{ haproxy_internal_int_ip }}:1936"
{% endif %}
      ],
    ],
  },
{% if 'pgbouncer' in groups %}
  {
    'job_name': 'pgbouncer',
    'static_configs' => [
      'targets' => [
{% for ip in pgbouncer_int_ips %}
        "{{ ip }}:9188",
{% endfor %}
      ],
    ],
  }
{% endif %}
]

# Enable Grafana
grafana['enable'] = true
{% if gitlab_root_password != '' %}
gitlab_rails['initial_root_password'] = "{{ gitlab_root_password | regex_escape() }}"
{% endif %}
grafana['disable_login_form'] = false
grafana['env'] = {
  'GF_AUTH_ANONYMOUS_ENABLED' => true,
  'GF_SERVER_ROOT_URL' => '{{ external_url_sanitised }}/-/grafana'
}

grafana['dashboards'] = [
  {
    'name' => 'GitLab Omnibus',
    'orgId' => 1,
    'folder' => 'GitLab Omnibus',
    'type' => 'file',
    'disableDeletion' => true,
    'updateIntervalSeconds' => 600,
    'options' => {
      'path' => '/opt/gitlab/embedded/service/grafana-dashboards',
    }
  },
  {
    'name' => 'GitLab Quality',
    'orgId' => 1,
    'folder' => 'GitLab Quality',
    'type' => 'file',
    'disableDeletion' => true,
    'updateIntervalSeconds' => 600,
    'options' => {
      'path' => '/opt/gitlab-quality/dashboards',
    }
  }
]

grafana['datasources'] = [
  {
    'name' => 'GitLab Omnibus',
    'type' => 'prometheus',
    'access' => 'proxy',
    'url' => 'http://localhost:9090'
  },
  {
    'name' => 'InfluxDB',
    'type' => 'influxdb',
    'access' => 'proxy',
    'database' => 'gpt_results',
    'url' => '{{ external_url_sanitised }}:8086'
  },
  {
    'name' => 'InfluxDB_sitespeed',
    'type' => 'influxdb',
    'access' => 'proxy',
    'database' => 'sitespeed',
    'url' => '{{ external_url_sanitised }}:8086'
  }
]

# Monitoring
consul['enable'] = true
consul['configuration'] = {
  bind_addr: '{{ ansible_default_ipv4.address }}',
  retry_join: %w({{ (consul_int_ips if 'consul' in groups else gitlab_rails_int_ips) | join(' ') }})
}
consul['monitoring_service_discovery'] = true

node_exporter['listen_address'] = '0.0.0.0:9100'

nginx['status']['options'] = {
  "server_tokens" => "off",
  "access_log" => "off",
  "allow" => "{{ monitor_int_ip }}",
  "deny" => "all",
}

# Disable all other services
gitlab_rails['auto_migrate'] = false
alertmanager['enable'] = false
gitaly['enable'] = false
gitlab_exporter['enable'] = false
gitlab_workhorse['enable'] = false
nginx['enable'] = true
postgres_exporter['enable'] = false
postgresql['enable'] = false
redis['enable'] = false
redis_exporter['enable'] = false
sidekiq['enable'] = false
unicorn['enable'] = false
puma['enable'] = false
