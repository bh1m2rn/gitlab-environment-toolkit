alertmanager['enable'] = false
gitaly['enable'] = false
gitlab_exporter['enable'] = false
gitlab_workhorse['enable'] = false
nginx['enable'] = false
postgres_exporter['enable'] = false
postgresql['enable'] = false
prometheus['enable'] = false
redis['enable'] = false
redis_exporter['enable'] = false
unicorn['enable'] = false
puma['enable'] = false

gitlab_rails['db_host'] = '{{ pgbouncer_ip }}'
gitlab_rails['db_port'] = 6432
gitlab_rails['db_password'] = '{{ postgres_password }}'
gitlab_rails['auto_migrate'] = false

gitlab_rails['gitaly_token'] = '{{ gitaly_token }}'

# Redis Servers Config
gitlab_rails['redis_cache_instance'] = 'redis://:{{ redis_password }}@gitlab-redis-cache'
gitlab_rails['redis_queues_instance'] = 'redis://:{{ redis_password }}@gitlab-redis-persistent'
gitlab_rails['redis_shared_state_instance'] = 'redis://:{{ redis_password }}@gitlab-redis-persistent'

gitlab_rails['redis_cache_sentinels'] = [
{% for ip in redis_cache_internal_ips %}
  {host: '{{ ip }}', port: 26379},
{% endfor %}
]
gitlab_rails['redis_queues_sentinels'] = [
{% for ip in redis_persistent_internal_ips %}
  {host: '{{ ip }}', port: 26379},
{% endfor %}
]
gitlab_rails['redis_shared_state_sentinels'] = [
{% for ip in redis_persistent_internal_ips %}
  {host: '{{ ip }}', port: 26379},
{% endfor %}
]

{% if jaeger %}
gitlab_rails['env'] = {
  "GITLAB_TRACING" => "opentracing://jaeger?http_endpoint=http%3A%2F%2F{{ jaeger_ip }}%3A14268%2Fapi%2Ftraces&sampler=const&sampler_param=0.1"
}
{% endif %}

# Ensure UIDs and GIDs match between servers for permissions via NFS
user['uid'] = 9000
user['gid'] = 9000
web_server['uid'] = 9001
web_server['gid'] = 9001
registry['uid'] = 9002
registry['gid'] = 9002

# Monitoring
consul['enable'] = true
consul['configuration'] = {
  retry_join: %w({{ consul_internal_ips | join(' ') }}),
  bind_addr: '{{ ansible_default_ipv4.address }}'
}
consul['monitoring_service_discovery'] = true

node_exporter['listen_address'] = '0.0.0.0:9100'
sidekiq['listen_address'] = '0.0.0.0'

# Storage Config
# Object Storage
gitlab_rails['artifacts_object_store_enabled'] = true
gitlab_rails['artifacts_object_store_remote_directory'] = "{{ gitlab_object_storage }}"
gitlab_rails['artifacts_object_store_connection'] = {
  'provider' => 'Google',
  'google_project' => '{{ project_name }}',
  'google_json_key_location' => '{{ serviceaccount_path }}'
}

gitlab_rails['lfs_object_store_enabled'] = true
gitlab_rails['lfs_object_store_remote_directory'] = "{{ gitlab_object_storage }}"
gitlab_rails['lfs_object_store_connection'] = {
  'provider' => 'Google',
  'google_project' => '{{ project_name }}',
  'google_json_key_location' => '{{ serviceaccount_path }}'
}

gitlab_rails['uploads_object_store_enabled'] = true
gitlab_rails['uploads_object_store_remote_directory'] = "{{ gitlab_object_storage }}"
gitlab_rails['uploads_object_store_connection'] = {
  'provider' => 'Google',
  'google_project' => '{{ project_name }}',
  'google_json_key_location' => '{{ serviceaccount_path }}'
}

# NFS
gitlab_rails['uploads_directory'] = '{{ gitlab_nfs_path }}/uploads'
gitlab_rails['shared_path'] = '{{ gitlab_nfs_path }}/shared'
gitlab_ci['builds_directory'] = '{{ gitlab_nfs_path }}/builds'

# Gitaly
git_data_dirs({
  'default' => { 'gitaly_address' => 'tcp://{{ gitaly_primary_ip }}:8075' },
  # 'storage1' => { 'gitaly_address' => 'tcp://{{ gitaly_primary_ip }}:8075' },
{% for gitaly_secondary_ip in gitaly_secondary_ips %}
  "storage{{loop.index + 1}}" => { 'gitaly_address' => 'tcp://{{ gitaly_secondary_ip }}:8075' },
{% endfor %}
})
