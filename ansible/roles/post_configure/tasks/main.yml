- name: End run if running against Geo secondary site
  meta: end_play
  when:
    - (geo_secondary_site_group_name in groups)

- name: Wait for GitLab to be available
  uri:
    url: '{{ external_url_sanitised }}/-/readiness'
    validate_certs: false
    timeout: 60
  register: result
  until: result.status == 200
  retries: 20
  delay: 5
  tags: healthcheck

- name: GitLab Root Password check
  fail:
    msg: "GitLab Root Password is empty. Post Configure steps will be skipped. Refer to docs for more info - https://gitlab.com/gitlab-org/gitlab-environment-toolkit/-/blob/main/docs/prep_toolkit.md#gitlab-initial-root-password "
  ignore_errors: true
  when: gitlab_root_password == ''
  tags: config-check

- name: Get details for GitLab Charts Task Runner Pod if present
  block:
    - name: Check for Task Runner pod
      kubernetes.core.k8s_info:
        kind: Pod
        label_selectors:
          - app in (task-runner, toolbox)
      register: task_runner_pod_list

    - name: Save Task Runner pod name
      set_fact:
        task_runner_pod: "{{ task_runner_pod_list | json_query('resources[0].metadata.name') }}"
      when: task_runner_pod_list.resources | length != 0
  when:
    - cloud_native_hybrid_environment
    - "'gitlab_rails' not in groups"
  tags:
    - access_token
    - generate_access_token
    - remove_access_token
    - license
    - reconfigure
    - elasticsearch

- name: Generate Access Token
  block:
    - name: Generate Access Token via GitLab Rails
      command: |
        gitlab-rails runner "
          existingToken = PersonalAccessToken.find_by_token('{{ access_token_key }}')

          if existingToken == nil
            token=User.find_by_username('{{ access_token_user }}').
                      personal_access_tokens.create(
                        scopes: {{ access_token_scopes }},
                        name: 'GitLab Environment Toolkit API Token'
                      )
            token.set_token('{{ access_token_key }}')
            token.save!
          end
        "
      delegate_to: "{{ groups['gitlab_rails'][0] }}"
      delegate_facts: true
      become: true
      when: "'gitlab_rails' in groups"

    - name: Generate Access Token via GitLab Charts Task Runner Pod
      kubernetes.core.k8s_exec:
        pod: "{{ task_runner_pod }}"
        namespace: "{{ gitlab_charts_release_namespace }}"
        command: |
          gitlab-rails runner "
            existingToken = PersonalAccessToken.find_by_token('{{ access_token_key }}')

            if existingToken == nil
              token=User.find_by_username('{{ access_token_user }}').
                        personal_access_tokens.create(
                          scopes: {{ access_token_scopes }},
                          name: 'GitLab Environment Toolkit API Token'
                        )
              token.set_token('{{ access_token_key }}')
              token.save!
            end
          "
      when:
        - task_runner_pod is defined
        - "'gitlab_rails' not in groups"
  tags:
    - access_token
    - generate_access_token
    - license
    - reconfigure
    - elasticsearch

- name: Perform GitLab post configuration
  block:
    - name: Configure Ultimate License
      import_tasks: license.yml
      when:
        - gitlab_license_file is defined
        - gitlab_license_plan is not defined
      tags:
        - license
        - elasticsearch

    - name: Configure Advanced Search with Elasticsearch
      import_tasks: elasticsearch.yml
      when:
        - "'elastic' in groups"
        - gitlab_license_file is defined
        - gitlab_license_plan is defined
      tags: elasticsearch
  when: gitlab_root_password != ''

- name: Run Custom Tasks
  block:
    - name: Check if Custom Tasks file exists
      stat:
        path: "{{ post_configure_custom_tasks_file }}"
      register: post_configure_custom_tasks_file_path
      delegate_to: localhost
      become: false

    - name: Run Custom Tasks
      include_tasks:
        file: "{{ post_configure_custom_tasks_file }}"
        apply:
          tags: custom_tasks
      when: post_configure_custom_tasks_file_path.stat.exists
  tags: custom_tasks

- name: Remove Access Token
  block:
    - name: Remove Access Token via GitLab Rails
      command: |
        gitlab-rails runner "PersonalAccessToken.find_by_token('{{ access_token_key }}').revoke!"
      delegate_to: "{{ groups['gitlab_rails'][0] }}"
      delegate_facts: true
      become: true
      when: "'gitlab_rails' in groups"

    - name: Remove Access Token via GitLab Charts Task Runner Pod
      kubernetes.core.k8s_exec:
        pod: "{{ task_runner_pod }}"
        namespace: "{{ gitlab_charts_release_namespace }}"
        command: |
          gitlab-rails runner "PersonalAccessToken.find_by_token('{{ access_token_key }}').revoke!"
      when:
        - task_runner_pod is defined
        - "'gitlab_rails' not in groups"

    - name: Remove saved Access Token generation file
      file: path=tmp/access-token state=absent
      delegate_to: localhost
      become: false
  tags:
    - access_token
    - remove_access_token
    - license
    - reconfigure
    - elasticsearch
